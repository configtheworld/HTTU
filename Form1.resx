<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cikis.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAD0AAAA8CAYAAADVPrJMAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABK9JREFUaEPtmtuLG2UYxmM91BN4QtdkZtYk3zdtDSiCIHih1gNVEPFCRMUr8Uar
        d4p3ahGlRfBw541QD6AWK4qI4JX/gFcqiIoWkbWbTCZbF6m2atf3nX1mTSZPDjM7OXSZHzwU8j3v871v
        OpnMZLZUUFBQUFBQMJS2a38R/anCS1sbGfS4aK1bR6rVc7G8NUkODB3H8taEDFwMvSUhA2+NoUPXv08G
        eTt07YeBZx7EyxGJYenQK9VdVa3THLw0vwSO/xgZaE0GeBqWkUOrN7muuVieH9qOfTxINJoUrEOH/tV1
        zyNr/8uze6OQWXJs0a9LM0t9zRGtlXafpTVsTRQNfWxx8RKyltTRpmeN+qeOHIZPtd3aH6SpPo17eP9o
        7XayNkD+M1HgtAg8/1neSL/ksH8YZRHMI9r4TH8pV2dknUqyn0fZZOl49iXWQI8c+3fLNXehpAfq7xo6
        Rus1h3iTOoCSyRB69lWyaY+Cir0HdgqrEfUNHSNn7ruJv0eha16HPV/0pkAOp7/YprH0Mwn7QFidaODQ
        yreNxjmkplunJnLTMnxgsxqfnUfB64cPrch33rYlzz5BaiNpf7DmgxzWh9hG0L/S0BmwjoTUq0YOreg+
        S5X6m6Q+1sewbg59h0l4JLnMPAHb2LAc0VhDx4j/RKJ+Q1+Vrj8btuxI0OFkcKwVx78OtrFhOaJUQx+9
        0jZIRqTANZ/Blh0WrJLv6odgSQXLEqUaWgkX7f0kJxIs2Qhc/z0Wqlp1dl0GWypYlij10L+7jUtJTqRA
        zkGwpUc+s5+zULlo+BSW1NC8DEMrcsb+hGSpvoAlPSQsUuCYW2FJDcsTZRq64+24iWRFgiU9LEyF5UxI
        fd+ZV6/lsZyaZFYsLKdDDp1bWJgKlsxIxn5knep4/ot4ORNxT0mtuHY3LOMjhe8mg9ZlvoFlLpB+vmZ9
        ho7/PizjI4V0aLmB3wPLXNB2zG2sz1yHFr0Dy1wQOuYt0mPeQ58eh7fckmYY2rN7WZgKlrmA9afquOZJ
        WNLBwlRYngtYfyosp4eFRZKTBywzpeX5N9P+RLCkZ/B9tMl0BZU3ckfV99gXOgxLegLHvkICIwXezgps
        MyG46uoy60sl/1mvwZaNQT8TyfX3C7DMBOlrH+0rj5+Nhv1U1HTsjbBNlbZbu4H1sy7zEWybQ8JO9oev
        q3V540LYpsLywsIFrA/oJGybRw6Z58gGG9JGYJ0oS+Xy+Wz/WHL/vw/WfJDQgQ/q9HO0Uq1eDOtE6NTr
        Fw06v6zL/AZrfsgX35nyTg59zKJPHWHPFX1D2X5d+kf7gz1f5GLgEbJhj0LXvAx7LkjmgeQeSbVc+yjs
        k6FVMQ+wjYn2y7s/9kOAbrRO6xN5VFl/lU2NPqRjDTDJrd/BtmfeGHX4yfo29ckl7kGWQ+WZe1E+HdpO
        /Xa5YlumzQyTY45I3SG935V/P5DzxM/UN0RyQmu2K/4daGX6SBPfJZuasH7A1rNl2a1fI+++/oErazIX
        6ddV061diy3nh1WntoM1vFkFldpObDG/LC+YK9pu/Xs2wLgK3dpPmoPI04s1a7frXwmEZbuHDRerWbZ3
        qk/9KC0oKCgYQan0H0HGVCaBmbkWAAAAAElFTkSuQmCC
</value>
  </data>
</root>