<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="RegisterNowButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKcAAABMCAYAAAAIlaetAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA6lJREFUeF7t1l9olXUcx/FNxy625jku/0G4tUgMFYrqJjPC3DlbcxluKv7BlUjI
        GguFtUBrDxV4YZAaXbiCQkWixxvzRr0YhxRnlGzn+bMdz+bWaX/yLGMzjbOlo6dH+F3ZQ5zznHPgK70/
        8Lr9/m7ePDwFjDHGGGOMMcYYe9jXPdpd3j527O1nYm+eWtm3Y2iRsT4RiIYSZb3V+B+738CT9qbE87Hd
        V1pHj3QM/zn2tEomv3Mcp/DHlLV0w/X2D6qsTYNl0dDsPCPkAJ6iIWd+tGZyzbXmU6cnula7/cxVKeV2
        7uGiL5LfbX0h/lYsEA0TJdLnRrrErJ88MHbscO/Uz0GVVG7mhlncMf7Vriq7cdTzcSANQaN2pnH4QOcP
        E9ZilVZ20zRtzuEJvbnSakh6PQhkYn609u4biY9Pxm6PPaoS878zNy6uWGZvueb1EODHQrNu+t2Rz5tV
        Yv6mRbSi8MC+QwEjfNfrEcCvJ+zNP3Wloo+p1DLflVvGs0vM14a9jgNZmtn9y8F2lVrGK9wy+H5Lufkq
        X03kxeNWY0TT9WLVW/rrPNtZUjO4t3uese5vr8NAtirMDbdOTp5/SSWX/tpOtJU+1bc95nUUyIUFZl1q
        bfydOpVc+guf2FnqHiBO5E3QCKUqzdf9xVlmVBMn8iZgVKdKzBBxQh7ihFjECbGIE2IRJ8QiTohFnBCL
        OCEWcUIs4oRYxAmxiBNiESfEIk6IRZwQizghFnFCLOKEWMQJsYgTYhEnxCJOiEWcEIs4IRZxQizihFjE
        CbGIE2IRJ8QiTohFnBCLOCEWcUIs4oRYxAmxiBNiESfEIk6IRZwQizghlu84d7pxlhs1xIm8ySLOttIK
        ayNxIm8WmutTa+Mtmcepne0seWWgtcfrKJALS+2Ntz9Lflutkstohav797znHrn34FEgF1b1N126OjQU
        UL1ltuO/nVuzyKxPeh0GshP+a8/IJwdVaplPi2hFL8dbvnSPzf77OOBfpdVgHbmpL1ep+dvRm/pzVXbj
        iNcDgB9Bs3amKfHRfpWY/2mONqfjxtfaYrP+jtdDQCaCRs1s/UDbhZ7p/kqVWHYbd8ZLWkc+3e/+f055
        PQikI2iE762Lt575/o/eZSqt3My27eJDv36zr8Ju+L3cCHs+DngJuBaYtdPbhz/UL0/15OaL+eB0XZ97
        +Y6xKjy49/iLfU0OkeK/3I9yhdXgLO/bdvFo8vRWPRJ5RKXEGGOMMcYYY4yxh3gFBf8ALv7DHmYqyXsA
        AAAASUVORK5CYII=
</value>
  </data>
</root>